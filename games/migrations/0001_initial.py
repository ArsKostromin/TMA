# Generated by Django 5.2.5 on 2025-08-15 16:21

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gifts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('pvp', 'PVP рулетка'), ('spin', 'Рекламный спин'), ('daily', 'Ежедневный розыгрыш')], default='pvp', max_length=20, verbose_name='Режим')),
                ('status', models.CharField(choices=[('waiting', 'Ожидание игроков'), ('running', 'В процессе'), ('finished', 'Завершена')], default='waiting', max_length=20, verbose_name='Статус')),
                ('pot_amount_ton', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Общая сумма в TON')),
                ('pot_amount_stars', models.PositiveIntegerField(default=0, verbose_name='Сумма в Stars')),
                ('hash', models.CharField(blank=True, max_length=64, null=True, verbose_name='Hash игры')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Начало')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Конец')),
                ('commission_percent', models.DecimalField(decimal_places=2, default=Decimal('15.00'), max_digits=4, verbose_name='Комиссия в %')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games_won', to=settings.AUTH_USER_MODEL, verbose_name='Победитель')),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bet_ton', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Ставка в TON')),
                ('bet_stars', models.PositiveIntegerField(default=0, verbose_name='Ставка в Stars')),
                ('chance_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='Шанс победы')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='games.game', verbose_name='Игра')),
                ('gifts', models.ManyToManyField(blank=True, to='gifts.gift', verbose_name='Подарки в ставке')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='SpinGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectors_count', models.PositiveSmallIntegerField(default=10, verbose_name='Кол-во секторов')),
                ('bet_ton', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Ставка в TON')),
                ('bet_stars', models.PositiveIntegerField(default=0, verbose_name='Ставка в Stars')),
                ('result_sector', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Выигрышный сектор')),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('gift_won', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gifts.gift', verbose_name='Выигранный подарок')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Игрок')),
            ],
        ),
    ]
