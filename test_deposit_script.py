#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è TON –∫–æ—à–µ–ª—å–∫–∞
"""

import os
import sys
import django
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth import get_user_model
from transactions.models import TONWallet, TONTransaction, Transaction
from transactions.ton_service import TONService

User = get_user_model()

def create_test_deposit(user_id, amount_ton=1.0, amount_usdt=10.0):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.objects.get(id=user_id)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–æ—à–µ–ª–µ–∫
        ton_service = TONService()
        wallet = ton_service.create_wallet_for_user(user)
        print(f"–ö–æ—à–µ–ª–µ–∫: {wallet.address}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        if amount_ton > 0:
            ton_tx = TONTransaction.objects.create(
                user=user,
                wallet=wallet,
                tx_hash=f"test_ton_{user_id}_{int(time.time())}",
                amount=Decimal(str(amount_ton)),
                token="TON",
                status="confirmed",
                sender_address="test_sender_ton",
                block_time=timezone.now()
            )
            
            # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            Transaction.objects.create(
                user=user,
                tx_type="deposit",
                amount=Decimal(str(amount_ton)),
                currency="TON",
                description="–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ TON",
                ton_transaction=ton_tx
            )
            print(f"–°–æ–∑–¥–∞–Ω–∞ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {amount_ton} TON")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é USDT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        if amount_usdt > 0:
            usdt_tx = TONTransaction.objects.create(
                user=user,
                wallet=wallet,
                tx_hash=f"test_usdt_{user_id}_{int(time.time())}",
                amount=Decimal(str(amount_usdt)),
                token="USDT",
                status="confirmed",
                sender_address="test_sender_usdt",
                block_time=timezone.now()
            )
            
            # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            Transaction.objects.create(
                user=user,
                tx_type="deposit",
                amount=Decimal(str(amount_usdt)),
                currency="USDT",
                description="–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ USDT",
                ton_transaction=usdt_tx
            )
            print(f"–°–æ–∑–¥–∞–Ω–∞ USDT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {amount_usdt} USDT")
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except User.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def list_users():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    users = User.objects.all()[:10]  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
    for user in users:
        print(f"ID: {user.id}, Username: {user.username}, First name: {user.first_name}")
    print()

if __name__ == "__main__":
    import time
    from django.utils import timezone
    
    print("üîß –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    list_users()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: "))
        amount_ton = float(input("–°—É–º–º–∞ TON –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (0 –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ") or "0")
        amount_usdt = float(input("–°—É–º–º–∞ USDT –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (0 –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ") or "0")
        
        if amount_ton == 0 and amount_usdt == 0:
            print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å—É–º–º—É")
            sys.exit(1)
        
        create_test_deposit(user_id, amount_ton, amount_usdt)
        
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
    except KeyboardInterrupt:
        print("\nüëã –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
