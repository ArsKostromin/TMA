# gifts/utils/telegram_payments.py
import logging
import requests
from django.conf import settings

logger = logging.getLogger(__name__)

def create_stars_invoice(user, gift_id: int, amount: int = 25):
    """
    –°–æ–∑–¥–∞—ë—Ç Telegram Stars-–∏–Ω–≤–æ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞ –≤—ã–≤–æ–¥ NFT.
    –¢—Ä–µ–±—É–µ—Ç —É user: telegram_id.
    """
    bot_token = getattr(settings, "STAR_TOKEN", None)
    if not bot_token:
        logger.error("‚ùå –í settings.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç star_token (None)")
        return {"ok": False, "error": "star_token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}

    chat_id = getattr(user, "telegram_id", None)
    if not chat_id:
        logger.error(f"üö´ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –Ω–µ—Ç telegram_id")
        return {"ok": False, "error": "telegram_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}

    url = f"https://api.telegram.org/bot{bot_token}/sendInvoice"

    payload = {
        "chat_id": chat_id,
        "title": "–û–ø–ª–∞—Ç–∞ –≤—ã–≤–æ–¥–∞ NFT",
        "description": f"–í—ã–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞ #{gift_id}. –ö–æ–º–∏—Å—Å–∏—è 25 –∑–≤—ë–∑–¥ ‚≠ê",
        "payload": f"withdraw_gift_{gift_id}",
        "provider_token": "",  # –¥–ª—è Stars ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º!
        "currency": "XTR",
        "prices": [{"label": "–ö–æ–º–∏—Å—Å–∏—è", "amount": amount}],
        "max_tip_amount": 0,
        "suggested_tip_amounts": [],
    }

    try:
        r = requests.post(url, json=payload)
        r.raise_for_status()
        data = r.json()
        logger.info(f"‚úÖ –ò–Ω–≤–æ–π—Å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {data}")
        return data
    except requests.RequestException as e:
        try:
            err_data = r.json()
        except Exception:
            err_data = str(e)
        logger.error(f"üíÄ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω–≤–æ–π—Å: {e} | –û—Ç–≤–µ—Ç: {err_data}")
        return {"ok": False, "error": str(e), "details": err_data}
