import logging
import requests
from django.conf import settings

logger = logging.getLogger(__name__)


def create_stars_invoice(user, gift_id: int, amount: int = 25):
    """
    –°–æ–∑–¥–∞—ë—Ç Telegram Stars-–∏–Ω–≤–æ–π—Å (–æ–ø–ª–∞—Ç–∞ XTR) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞ –≤—ã–≤–æ–¥ NFT.
    –¢—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã —É user –±—ã–ª telegram_id –∏ –≤ settings.bot_token –±—ã–ª —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.
    """
    bot_token = getattr(settings, "STAR_TOKEN", None)
    if not bot_token:
        logger.error("‚ùå –í settings.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç bot_token", settings.star_token)

        return {"ok": False, "error": "bot_token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}

    if not hasattr(user, "telegram_id") or not user.telegram_id:
        logger.error(f"üö´ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –Ω–µ—Ç telegram_id")
        return {"ok": False, "error": "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç telegram_id"}

    tg_url = f"https://api.telegram.org/bot{bot_token}/sendInvoice"
    payload = {
        "chat_id": user.telegram_id,
        "title": "–í—ã–≤–æ–¥ NFT –ø–æ–¥–∞—Ä–∫–∞",
        "description": f"–û–ø–ª–∞—Ç–∞ –∫–æ–º–∏—Å—Å–∏–∏  {amount}‚≠ê –∑–∞ –≤—ã–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞",
        "payload": f"withdraw_{gift_id}_{user.id}",
        "provider_token": "", 
        "currency": "XTR",
        "prices": [{"label": "–ö–æ–º–∏—Å—Å–∏—è –∑–∞ –≤—ã–≤–æ–¥", "amount": amount}],
        "start_parameter": f"withdraw_{gift_id}",
    }

    try:
        r = requests.post(tg_url, json=payload)
        r.raise_for_status()
        result = r.json()

        if not result.get("ok"):
            logger.error(f"üíÄ –û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–≤–æ–π—Å–∞: {result}")
            return {"ok": False, "error": result}

        logger.info(f"üí´ –ò–Ω–≤–æ–π—Å –Ω–∞ {amount}‚≠ê —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}")
        return {
            "ok": True,
            "data": result.get("result", {}),
            "payload": payload,
        }

    except requests.RequestException as e:
        logger.exception("üíÄ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Telegram API")
        return {"ok": False, "error": str(e)}
