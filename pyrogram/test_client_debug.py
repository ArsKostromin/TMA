# test_client_manual_fixed.py
import logging
from pyrogram import Client
from pyrogram.errors import SessionPasswordNeeded
import config  # ‚úÖ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–≤–æ–π –∫–æ–Ω—Ñ–∏–≥, –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º

# -----------------------------
# üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
# -----------------------------
logging.basicConfig(
    level=getattr(logging, config.LOG_LEVEL.upper(), logging.INFO),
    format=config.LOG_FORMAT,
    datefmt=config.LOG_DATE_FORMAT
)
logger = logging.getLogger("userbot")

# -----------------------------
# üì¶ –î–æ—Å—Ç–∞—ë–º –∫–æ–Ω—Ñ–∏–≥
# -----------------------------
API_ID = int(config.API_ID)
API_HASH = config.API_HASH
PHONE_NUMBER = config.PHONE_NUMBER
SESSION_PATH = config.SESSION_PATH

logger.info(f"API_ID={API_ID}, PHONE={PHONE_NUMBER}")
logger.info("–°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç Pyrogram...")

# -----------------------------
# üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
# -----------------------------
app = Client(
    name=SESSION_PATH,
    api_id=API_ID,
    api_hash=API_HASH
)

# -----------------------------
# üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
# -----------------------------
logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º —Ä—É—á–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")

try:
    app.connect()

    authorized = False
    try:
        me = app.get_me()
        authorized = True
        logger.info(f"–£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ {me.first_name} (@{me.username})")
    except Exception:
        logger.warning("–°–µ—Å—Å–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Ä—É—á–Ω–æ–π –≤—Ö–æ–¥...")

    if not authorized:
        sent_code = app.send_code(PHONE_NUMBER)
        phone_code_hash = sent_code.phone_code_hash
        logger.info(f"–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {PHONE_NUMBER}")

        code = input("[INPUT] –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ Telegram: ").strip()

        try:
            app.sign_in(
                phone_number=PHONE_NUMBER,
                phone_code_hash=phone_code_hash,
                phone_code=code
            )
        except SessionPasswordNeeded:
            password = input("[INPUT] –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å 2FA: ").strip()
            app.check_password(password)

        me = app.get_me()
        logger.info(f"[SUCCESS] –í–æ—à–ª–∏ –∫–∞–∫ {me.first_name} (@{me.username})")

except Exception as e:
    logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}", exc_info=True)
finally:
    app.disconnect()
    logger.info("–ö–ª–∏–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
