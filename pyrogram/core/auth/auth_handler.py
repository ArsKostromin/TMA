# –§–∞–π–ª: pyrogram/core/auth/auth_handler.py

import logging
from pyrogram import Client, idle
from pyrogram.errors import SessionPasswordNeeded, FloodWait

logger = logging.getLogger("pyrogram-main")

async def run_client(app: Client):
    """
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º Pyrogram ‚Äî –æ–∂–∏–¥–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.
    –ö–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∂–µ –∑–∞–ø—É—â–µ–Ω (app.start() –≤—ã–ø–æ–ª–Ω–µ–Ω —Ä–∞–Ω–µ–µ).
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—â–µ–Ω
        if not app.is_connected:
            logger.warning("‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω ‚Äî –≤—ã–ø–æ–ª–Ω—è—é app.start() –≤—Ä—É—á–Ω—É—é.")
            await app.start()

        me = await app.get_me()
        logger.info(f"‚úÖ Pyrogram –∑–∞–ø—É—â–µ–Ω –∫–∞–∫: {me.first_name} (@{me.username})")

        # –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫ –¥–æ —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (Ctrl+C –∏–ª–∏ disconnect)
        logger.info("üïì –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
        await idle()

    except SessionPasswordNeeded:
        logger.error("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (2FA). –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤—Ä—É—á–Ω—É—é.")
    except FloodWait as e:
        logger.error(f"üíÄ FloodWait: —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ñ–¥–∏ {e.value} —Å–µ–∫ ({round(e.value / 3600, 1)} —á).")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞: {e}", exc_info=True)
    finally:
        if app.is_connected:
            await app.stop()
            logger.info("üëã –ö–ª–∏–µ–Ω—Ç Pyrogram –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
