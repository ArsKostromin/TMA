import logging
import asyncio
import sys

# === –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ===
try:
    import config
except ImportError:
    print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª config.py. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    sys.exit(1)

# === –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ===
from .auth.telegram_client import create_client
from .auth.auth_handler import run_client
from .gift_listener.gifts_listener import register_gift_listener, process_chat_history
from .sender_gift.sender import send_gift_to_user, show_my_gifts

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
logging.basicConfig(
    level=config.LOG_LEVEL,
    format="%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    datefmt=config.LOG_DATE_FORMAT,
)
logger = logging.getLogger("pyrogram-main")


async def main_userbot():
    """
    –ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è Pyrogram userbot.
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–æ–º –∫–ª–∏–µ–Ω—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ª–æ–≥–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤.
    """
    app = None
    try:
        # 1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç Telegram
        app = create_client(config)
        logger.info("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω.")

        # 2Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
        await app.start()
        me = await app.get_me()
        logger.info(f"üöÄ Userbot –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {me.first_name} (@{me.username}) | ID={me.id}")

        await show_my_gifts(app)

        # # === –ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ ===
        # peer_id = 1207534564      # ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        # gift_id = 5852757491946882427  # ID –ø–æ–¥–∞—Ä–∫–∞ (NFT)
        # logger.info(f"üéÅ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ {gift_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer_id}...")

        # success = await send_gift_to_user(app, peer_id, gift_id)

        # if success:
        #     logger.info(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ {gift_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer_id}.")
        # else:
        #     logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ {gift_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer_id}.")

        # === –ü—Ä–∏–º–µ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–ª—É—à–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤ (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è) ===
        # register_gift_listener(app)
        # logger.info("üéÅ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")

        # === –ü—Ä–∏–º–µ—Ä —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å) ===
        # logger.info("üìú –°–∫–∞–Ω–∏—Ä—É—é –∏—Å—Ç–æ—Ä–∏—é –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤...")
        # await process_chat_history(app)
        # logger.info("üìú –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

        # 3Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
        logger.info("üïì –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
        await run_client(app)

    except ValueError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ userbot: {e}", exc_info=True)
    finally:
        # 4Ô∏è‚É£ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
        if app and app.is_connected:
            await app.stop()
        logger.info("üëã –†–∞–±–æ—Ç–∞ userbot –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")