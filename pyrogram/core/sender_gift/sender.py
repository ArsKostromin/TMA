import logging
import asyncio
from pyrogram import Client
from pyrogram.errors import RPCError, StargiftUsageLimited

logger = logging.getLogger("pyrogram-main.sender")


async def send_gift_to_user(app: Client, peer_id: int, gift_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥–∞—Ä–æ–∫ (NFT) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Pyrogram –º–µ—Ç–æ–¥ send_gift.

    :param app: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Pyrogram
    :param peer_id: Telegram ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    :param gift_id: ID –ø–æ–¥–∞—Ä–∫–∞ (NFT)
    :return: True, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
    """
    try:
        logger.info(f"üéÅ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫ ID={gift_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ID={peer_id}...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        balance = await app.get_stars_balance()
        logger.info(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance}")

        if balance <= 0:
            logger.error("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞")
            return False

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫ —á–µ—Ä–µ–∑ API Pyrogram
        result = await app.send_gift(
            chat_id=peer_id,
            gift_id=gift_id,
            is_private=True,
        )

        logger.info(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {peer_id}! –û—Ç–≤–µ—Ç API: {result}")
        return True

    except StargiftUsageLimited:
        logger.warning(f"‚ö†Ô∏è –°–∞–ø–ª–∞–π –ø–æ–¥–∞—Ä–∫–∞ ID={gift_id} –∑–∞–∫–æ–Ω—á–∏–ª—Å—è")
        return False

    except RPCError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ RPC –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")
        return False

    except Exception as e:
        logger.error(f"üí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥–∞—Ä–∫–∞: {e}", exc_info=True)
        return False


# ==== –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç ====
# if __name__ == "__main__":
#     import os
#     from ..telegram_client import create_client
#     import config

#     async def main():
#         app = create_client(config)
#         await app.start()

#         peer_id = 1207534564  # id –ø–æ–ª—É—á–∞—Ç–µ–ª—è
#         gift_id = 5852757491946882427  # id –≥–∏—Ñ—Ç–∞ SnakeBox-29826

#         success = await send_gift_to_user(app, peer_id, gift_id)

#         if success:
#             logger.info("üéâ –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
#         else:
#             logger.error("üíÄ –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")

#         await app.stop()

#     asyncio.run(main())
