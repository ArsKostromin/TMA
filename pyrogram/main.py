import asyncio
import logging
import threading
import uvicorn
from config import LOG_FORMAT, LOG_DATE_FORMAT, LOG_LEVEL
# from api.server import app
from core.bot import main_userbot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(format=LOG_FORMAT, level=getattr(logging, LOG_LEVEL), datefmt=LOG_DATE_FORMAT)
logger = logging.getLogger(__name__)

# def run_fastapi():
#     """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä Uvicorn (FastAPI) –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
#     # –ò—Å–ø–æ–ª—å–∑—É–µ–º reload=False, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –ø–æ—Ç–æ–∫–∞
#     uvicorn.run(app, host="0.0.0.0", port=8080, log_level="info")

if __name__ == "__main__":
    logger.info("ü§ñ –ó–∞–ø—É—Å–∫ Userbot –∏ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # # –ó–∞–ø—É—Å–∫ FastAPI –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ (threading)
    # server_thread = threading.Thread(target=run_fastapi, daemon=True)
    # server_thread.start()
    # logger.info("üåê FastAPI –∑–∞–ø—É—â–µ–Ω –Ω–∞ 0.0.0.0:8080 –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ.")

    # –ó–∞–ø—É—Å–∫ userbot'–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ (asyncio)
    try:
        asyncio.run(main_userbot())
    except KeyboardInterrupt:
        logger.info("üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª KeyboardInterrupt. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ asyncio: {e}")
