"""
–ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Pyrogram Userbot
–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ —Ä–∞–±–æ—Ç—É userbot'–∞
"""

import asyncio
import logging
import os
import signal
import sys
from core.bot import main_userbot

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ ---
logging.basicConfig(
    format="%(asctime)s | %(levelname)s | %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# --- –ì—Ä–µ–π—Å—Ñ—É–ª-—à–∞—Ç–¥–∞—É–Ω –¥–ª—è Docker ---
def handle_sigterm(*_):
    logger.warning("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (SIGTERM). –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
    sys.exit(0)


async def run_userbot():
    """
    –ó–∞–ø—É—Å–∫ userbot —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∫—Ä—ç—à–µ–π
    """
    try:
        await main_userbot()
    except Exception as e:
        logger.exception(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ userbot: {e}")
        await asyncio.sleep(5)


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
    """
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Pyrogram Userbot...")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è Docker
    loop = asyncio.get_running_loop()
    for sig in (signal.SIGTERM, signal.SIGINT):
        try:
            loop.add_signal_handler(sig, handle_sigterm)
        except NotImplementedError:
            # Windows –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç add_signal_handler
            pass

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ‚Äî –±–æ—Ç —Å–∞–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–ª–µ—Ç–µ
    while True:
        await run_userbot()
        logger.warning("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ userbot —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
        await asyncio.sleep(5)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
