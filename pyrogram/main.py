"""
–ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Pyrogram Userbot
–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ —Ä–∞–±–æ—Ç—É userbot'–∞ (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫)
"""

import asyncio
import logging
import signal
import sys
from core.bot import main_userbot

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ ---
logging.basicConfig(
    format="%(asctime)s | %(levelname)s | %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger("pyrogram-main")


# --- –ì—Ä–µ–π—Å—Ñ—É–ª-—à–∞—Ç–¥–∞—É–Ω –¥–ª—è Docker / Ctrl+C ---
def handle_sigterm(*_):
    logger.warning("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (SIGTERM). –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
    sys.exit(0)


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
    """
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Pyrogram Userbot...")

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤
    loop = asyncio.get_running_loop()
    for sig in (signal.SIGTERM, signal.SIGINT):
        try:
            loop.add_signal_handler(sig, handle_sigterm)
        except NotImplementedError:
            pass  # Windows, –Ω–µ —Ä—É–≥–∞–π—Å—è

    # –ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –∏ –∂–¥—ë–º
    try:
        await main_userbot()
    except Exception as e:
        logger.exception(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ userbot: {e}")
    finally:
        logger.info("üëã –†–∞–±–æ—Ç–∞ userbot –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
