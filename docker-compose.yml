services:
  web:
    build:
      context: .
    container_name: SG-backend
    command: uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --log-level debug --proxy-headers
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - SG-network
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings

  celery:
    build:
      context: .
    container_name: SG-celery
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - postgres
    networks:
      - SG-network

  redis:
    image: redis:7
    container_name: SG-redis
    ports:
      - "6379:6379"
    networks:
      - SG-network

  postgres:
    image: postgres:14
    container_name: SG-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - SG-network

  nginx:
    image: nginx:latest
    container_name: SG-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt   # теперь read/write
      - ./certbot:/var/www/certbot           # для webroot challenge
      - ./staticfiles:/app/static
      - ./public_html:/var/www/unity:ro
    depends_on:
      - web
    networks:
      - SG-network

networks:
  SG-network:

volumes:
  postgres_data:
